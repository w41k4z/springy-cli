#!/bin/bash

# global variables
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color


# help manual
help() {
  echo -e "${YELLOW}Usage:${NC} ${GREEN}springy${NC} <option> <optional: path>"
  echo ""
  echo "Options:"
  echo -e "  ${GREEN}--init${NC}: Initialize project folder structure"
  echo -e "  ${GREEN}-u${NC}, ${GREEN}--uninstall:${NC} Uninstall springy"
  echo -e "  ${GREEN}-h${NC}, ${GREEN}--help:${NC} Show this help message"
  echo -e "  ${GREEN}-d${NC}, ${GREEN}--deploy:${NC} Deploy the project to your tomcat server"
}

if [[ $# -gt 2 || $# -lt 1 ]]
  then
    echo -e "${RED}ERROR:${NC} Invalid number of arguments"
    help
    exit 1
fi

# methods

# needs the parameter input_path
init() {
  echo "Initializing project..."
  [ -z $input_path ] && the_path=. || the_path=$input_path

  read -p ">> Enter your project name: " projectName
  if [ -z $projectName ]
    then
      echo -e "${RED}ERROR:${NC} Project name cannot be empty"
      exit 1
  fi
  echo ""

  echo "Generating project structure..."
  mkdir $the_path/$projectName $the_path/$projectName/src $the_path/$projectName/src/views $the_path/$projectName/src/modelControllers $the_path/$projectName/src/static $the_path/$projectName/lib
  echo ""
  read -p "Do you use VS Code ? [y/n] " -n 1 -r
  if [[ $REPLY =~ ^[Yy]$ ]]
    then
      mkdir $the_path/$projectName/.vscode
      echo "{" > $the_path/$projectName/.vscode/settings.json
      echo "  \"java.project.sourcePaths\": [\"src\"]," >> $the_path/$projectName/.vscode/settings.json
      echo "  \"java.project.outputPath\": \"bin\"," >> $the_path/$projectName/.vscode/settings.json
      echo "  \"java.project.referencedLibraries\": [" >> $the_path/$projectName/.vscode/settings.json
      echo "    \"lib/**/*.jar\"" >> $the_path/$projectName/.vscode/settings.json
      echo "  ]" >> $the_path/$projectName/.vscode/settings.json
      echo "}" >> $the_path/$projectName/.vscode/settings.json
  fi
  echo ""
  echo ""

  echo "Importing the springy jar file..."
  echo ""
  read -p ">> Enter the path to the springy jar file: " springyPath
  if [[ -f $springyPath ]]
    then
      cp $springyPath $the_path/$projectName/lib/
  else
    echo -e "${RED}ERROR:${NC} Invalid path. The springy jar file was not found"
    rm -r $the_path/$projectName
    exit 1
  fi
  echo ""

  echo "Generating web.xml file..."
  sleep 1
  echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > $the_path/$projectName/web.xml
  echo "<web-app xmlns=\"https://jakarta.ee/xml/ns/jakartaee\"" >> $the_path/$projectName/web.xml
  echo "  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"" >> $the_path/$projectName/web.xml
  echo "  xsi:schemaLocation=\"https://jakarta.ee/xml/ns/jakartaee" >> $the_path/$projectName/web.xml
  echo "                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"" >> $the_path/$projectName/web.xml
  echo "  version=\"5.0\"" >> $the_path/$projectName/web.xml
  echo "  metadata-complete=\"true\">" >> $the_path/$projectName/web.xml
  echo "" >> $the_path/$projectName/web.xml
  echo "    <servlet>" >> $the_path/$projectName/web.xml
  echo "        <servlet-name>FrontServlet</servlet-name>" >> $the_path/$projectName/web.xml
  echo "        <servlet-class>etu2011.framework.servlet.FrontServlet</servlet-class>" >> $the_path/$projectName/web.xml
  echo "    </servlet>" >> $the_path/$projectName/web.xml
  echo "" >> $the_path/$projectName/web.xml
  echo "    <servlet-mapping>" >> $the_path/$projectName/web.xml
  echo "        <servlet-name>FrontServlet</servlet-name>" >> $the_path/$projectName/web.xml
  echo "        <url-pattern>/</url-pattern>" >> $the_path/$projectName/web.xml
  echo "    </servlet-mapping>" >> $the_path/$projectName/web.xml
  echo "" >> $the_path/$projectName/web.xml
  echo "    <servlet>" >> $the_path/$projectName/web.xml
  echo "        <servlet-name>default</servlet-name>" >> $the_path/$projectName/web.xml
  echo "        <servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>" >> $the_path/$projectName/web.xml
  echo "    </servlet>" >> $the_path/$projectName/web.xml
  echo "" >> $the_path/$projectName/web.xml
  echo "    <servlet-mapping>" >> $the_path/$projectName/web.xml
  echo "        <servlet-name>default</servlet-name>" >> $the_path/$projectName/web.xml
  echo "        <url-pattern>/static/*</url-pattern>" >> $the_path/$projectName/web.xml
  echo "    </servlet-mapping>" >> $the_path/$projectName/web.xml
  echo "" >> $the_path/$projectName/web.xml
  echo "</web-app>" >> $the_path/$projectName/web.xml
  echo ""
  echo -e "${YELLOW}NOTE:${NC} You can always edit the web.xml file later"
  echo ""
  echo -e "${GREEN}Project initialized successfully${NC}"
}

# needs the parameter project_dir and project_name
deploy() {
  current_dir=$(pwd)

  [ -z $project_dir ] && the_path=. || the_path=$project_dir
  
  # checking if tomcat is installed
  if [ -z $CATALINA_HOME ]
    then
      echo -e "${RED}ERROR:${NC} CATALINA_HOME is not set. Please set it to your tomcat installation directory"
      exit 1
  fi

  # moving to the project directory
  cd $the_path

  [ $the_path == "." ] && project_name=$(pwd) || project_name=$the_path

  # creating the directory structure for the project test to deploy
  mkdir temp temp/views temp/static temp/WEB-INF temp/WEB-INF/classes temp/WEB-INF/lib

  # copying jar file to the project library and the web.xml file
  cp lib/* temp/WEB-INF/lib 
  cp web.xml temp/WEB-INF/
  cp -r src/views/* temp/views/
  cp -r src/static/* temp/static/

  classpath_string=$(find lib/ -name '*.jar' | tr '\n' ':')
  # compiling models and other user necessity to the project classes directory
  javac -parameters -classpath $classpath_string -d temp/WEB-INF/classes --enable-preview --release 20 $(find src -name '*.java')
  cd temp

  # exporting the temp directory to a war file and move it to tomcat webapps folder
  jar cvf $CATALINA_HOME/webapps/$(basename "$project_name").war *
  cd ../

  # removing temp directory
  rm -r temp

  # moving back to the previous directory
  cd $current_dir

  echo ""
  echo -e "${GREEN}Deploying project to tomcat server${NC}"
}

case $1 in
  --init)
    input_path=$2
    init $input_path
    ;;
  -u|--uninstall)
    read -p ">> Are you sure you want to uninstall springy-cli ? [y/n] " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]
      then
        echo "Uninstalling springy-cli..."
        sleep 1
        echo "This require sudo privileges (may ask password)"
        sudo rm /usr/local/bin/springy
    fi
    ;;
  -h|--help)
    help
    ;;
  -d|--deploy)
    echo "Deploying project to tomcat server"
    echo ""
    project_dir=$2
    deploy $project_dir 
    ;;
  *)
    echo -e "${RED}ERROR:${NC} $1 is not a valid argument"
    echo ""
    help
    exit 1
    ;;
esac

exit
